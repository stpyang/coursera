NA
} else {
10
}
y
source("pollutantMean")
getwd()
setwd("/Users/stpyang/Programming/coursera/rprog-002")
ls
source("complete.R")
ls
ls(environment(digest))
environment(digest)
f <- function(x) <- {y <- 2; y^2 + g(x)}
f <- function(x) {y <- 2; y^2 + g(x)}
g <- function(x) { x * y}
f(e)
f(3)
y <- 10
f(3)
y <- 2
y <- 10
f(3)
g(2)
y
?str
str(g)
x <- Sys.time()
x
unclass(x)
class(x)
x$sec
x <- as.POSIXlt(x)
x
unclass(x)
x$year
x$year + 1970
x$year + 1960
x$year + 1930
x$year + 1900
s$sec
x$sec
x
y
yy <- x
x <- as.Date("2012-01-01")
x - yy
as.POSIXlt(x) - y
(as.POSIXlt(x) - y).day
(as.POSIXlt(x) - y).days
unclass(as.POSIXlt(x) - y)
as.POSIXlt(as.POSIXlt(x) - y)
unclass(as.POSIXlt(as.POSIXlt(x) - y))
directory="/Users/stpyang/Programming/coursera/rprog-002/specdata/"
myReadCsv <- function(directory, i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
id = 1:10
lapply(id, myReadCsv)
lapply(id, myReadCsv)
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
lapply(id, myReadCsv)
temp <- lapply(id, myReadCsv)
unclass(temp)
class(unclass(temp))
class(temp)
as.data.frame(temp)
do.class("rbind", temp)
temp2 <- do.call("rbind", temp)
temp2
temp2 <- do.call("rbind", temp)
getwd
getwd()
source("pollutantMean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("submitscript1.R")
submit()
submit()
submit()
?sapply
myFunction <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
sum(good)
}
myFunction(2)
directory
directory <- "/Users/stpyang/Programming/coursera/rprog-002/"
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
myFunction <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
sum(good)
}
myFunction(2)
directory <- "/Users/stpyang/Programming/coursera/rprog-002/specdata/"
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
myFunction <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
sum(good)
}
myFunction(2)
myFunction(3)
myFunction(2)
myFunction(30)
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
temp <- sapply(id, myReadCsv)
id
id <- 1:10
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
temp <- sapply(id, myReadCsv)
temp
class(temp)
class(temp[1])
?quantile
?tapply
temp <- lapply(id, myReadCsv)
temp
summary(temp)
temp[1,]
temp[1]
tapply(data, FUN=function() complete.cases(temp$sulfate, temp$nitrate))
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
data
temp
tapply(temp, temp$ID, myFunction)
length(temp)
length(myFunction)
temp <- do.call("rbind", temp)
length(temp)
length(temp[,1])
length(temp$ID
)
tapply(temp[,1], temp$ID, myFunction)
myFunction <- function(df) {
good <- complete.cases(df$sulfate, df$nitrate)
sum(good)
}
tapply(temp[,1], temp$ID, myFunction)
temp
head(temp)
temp$ID
tapply(temp[,1], temp$ID, myFunction)
temp[,1]
temp[,1][1]
tapply(temp, temp$ID, myFunction)
class(temp)
head(temp)
tapply(temp, temp$ID, myFunction)
tapply(as.matrix(temp), temp$ID, myFunction)
as.list(temp)
class(as.list(temp))
tapply(as.list(temp), temp$ID, myFunction)
length(as.list(temp))
length(as.list(temp[1,]))
length(as.list(temp[,1]))
head(as.list(temp[,1]))
head(temp)
temp2 <- c(temp$ID, temp$ID)
temp2
head(temp2)
temp2 <- c(temp$ID, temp$ID)
dim(temp2)
class(temp2)
temp2 <- list(temp$ID, temp$ID)
temp2
dim(temp2)
head(temp2)
temp2
temp2 <- cbind(temp$ID, temp$ID)
temp2
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
temp <- lapply(id, myReadCsv)
myData <- do.call("rbind", temp)
myData
good <- complete.cases(myData$sulfate, myData$nitrate)
good
myData[good]
good
myData
good
myData[good]
myData[good,]
myData <- myData[good,]
myData
tapply(myData, myData$ID, sum)
length(myData)
x
class(x)
length(x)
lengtHh(x)
length(x)
ids <- myData$ids
ids <- tapply(ids, ids, sum)
ids
ids <- myData$ID
ids
ids <- myData$ids
ids <- myData$ID
tapply(myData, myData$ID, sum)
tapply(ids, ids, sum)
tapply(ids, ids, count)
tapply(ids, ids, length)
as.data.frame(ids)
result <-tapply(ids, ids, count)
result <-tapply(ids, ids, count)
result <-tapply(ids, ids, length)
result
cbind(result)
data.frame(    nobs <- tapply(ids, ids, length)
)
nobs <- tapply(ids, ids, length)
nobs
id <- unique(ids)
id
c  myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
temp <- lapply(id, myReadCsv)
myData <- do.call("rbind", temp)
good <- complete.cases(myData$sulfate, myData$nitrate)
myData <- myData[good,]
ids <- myData$ID
id <- unique(ids)
nobs <- tapply(ids, ids, length)
data.frame(id, nobs)
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
temp <- lapply(id, myReadCsv)
myData <- do.call("rbind", temp)
good <- complete.cases(myData$sulfate, myData$nitrate)
myData <- myData[good,]
ids <- myData$ID
id <- unique(ids)
nobs <- tapply(ids, ids, length)
data.frame(id, nobs)
source("complete.R")
directory
complete(directory, 1)
complete(directory, c(2,4,8,10,12))
complete(directory, c(30:25))
complete(directory, 3)
submit()
submit()
submit()
id
nobs
cbind(id, nobs)
id <- 30:25
temp <- lapply(id, myReadCsv)
myData <- do.call("rbind", temp)
good <- complete.cases(myData$sulfate, myData$nitrate)
myData <- myData[good,]
ids <- myData$ID
id <- unique(ids)
nobs <- tapply(ids, ids, length)
nobs
data.frame(id, nobs)
data.frame(c(id, nobs)
)
data.frame(c(id, nobs)
)
data.frame(c(id, nobs))
data.frame(cbind(id, nobs))
id
nobs
merge(id, nobs)
nobs?merge
?merge
merge(ids, nobs, by="id")
merge(ids, nobs)
id
nobs
merge(ids, nobs, by=x)
class(id)
class(nobs)
data.frame(as.array(id), nobs)
ids
id
nobs
data.frame(nobs)
source("complete.R")
complete(directory, 30:25)
nobs
ids
?tapply
tapply
id
tapply(ids, ids, length, factor=id)
myFunction <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(myData$sulfate, myData$nitrate)
sum(good)
}
tapply(id, myFunction)
id
i <- 30
myFunction(30)
lapply(id, myFunction)
sapply(id, myFunction)
id
myFunction <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
sum(good)
}
lapply(id, myFunction)
sapply(id, myFunction)
tapply(id, myFunction)
sapply(id, myFunction)
cbind(id, sapply(id, myFunction))
source("complete.R")
complete(directory, 30:25)
submit()
submit()
submit()
cbind(id, sapply(id, myFunction))
clear
directory <- "/Users/stpyang/Programming/coursera/rprog-002/"
ls
?ls
source("submitScript3.R")
source("corr.R")
source("complete.R")
complete(directory, 3)
directory <- "/Users/stpyang/Programming/coursera/rprog-002/specdata"
complete(directory, 3)
complete(directory, 30:25)
submit()
source("submitscript1.R")
submit()
submit()
submit()
submit()
complete.R
complete(directory, 3)
answer <- complete(directory, 3)
class(answer)
source("complete.R")
complete(directory, 30:25)
source("complete.R")
complete(directory, 30:25)
?data.frame
test <- complete(directory, 30:25)
names(test)
source("complete.R")
test <- complete(directory, 30:25)
test
submit()
submit()
submit()
?cor
threshold = 10
myCorr <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
if (sum(good) > threshold) {
temp <- temp[good,]
cor(temp$sulfate, temp$nitrate)
} else {
NA
}
}
myCorr(10)
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
myCorr <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
if (sum(good) > threshold) {
temp <- temp[good,]
cor(temp$sulfate, temp$nitrate)
} else {
NA
}
}
myCorr(10)
myCorr(11)
myCorr(12)
myReadCsv <- function(i) {
fileName <- sprintf("%03d.csv", i)
fileName <- paste(directory, "/", fileName, sep="")
read.csv(fileName)
}
myCorr <- function(i) {
temp <- myReadCsv(i)
good <- complete.cases(temp$sulfate, temp$nitrate)
if (sum(good) > threshold) {
temp <- temp[good,]
cor(temp$sulfate, temp$nitrate)
} else {
NA
}
}
id
id = (1:332)
sapply(id, myCorr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
submit
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
x
gl(3,10)
x <- c(rnorm(10), runif(10), rnorm(10))
x
rnorm910
rnorm(10)
library(datasets)
data(iris)
?iris
iris
head(iris)
iris[$Species="virginica"]
iris[iris$Species="virginica"]
iris[iris$Species=="virginica"]
iris$Species=="virginica"
iris[iris$Species=="virginica"]
iris[iris$Species=="virginica",]
iris[iris$Species=="virginica",]$Sepal.Length
mean(iris[iris$Species=="virginica",]$Sepal.Length)
library(datasets)
data(iris)
mean(iris[iris$Species=="virginica",]$Sepal.Length)
apply(iris, 2, mean)
apply(iris, 1, mean)
rowMeans(iris[1:4])
apply(iris[1:4,], 2, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
head(mtcars)
sapply(mtcars$mpg, ctcars$cyl)
sapply(mtcars$mpg, ctcars$cyl, mean)
sapply(split(mtcars$mpg, ctcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
cyl
mean
abs(15.1000-26.55354)
abs(15.1000-26.66364)
debug(ls)
ls
ld
ls
debug(ls)
ls
debug(ls)
ls(".")
exit
quit
quit
quit()
quit
quit()
quit()
stop()
exit
exit()
stop
end
end()
quit()
exit()
